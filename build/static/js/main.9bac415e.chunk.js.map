{"version":3,"sources":["services/PrototypeService.js","services/UserService.js","components/SearchRowComponent.js","services/DiscussionService.js","components/SearchTableComponent.js","components/SearchComponent.js","components/ResultInfoComponent.js","components/ShowPosterComponent.js","components/ShowListComponent.js","components/ProgressComponent.js","components/SummaryCardComponent.js","components/ProfileTabsComponent.js","components/GenreBadgesComponent.js","components/PostListComponent.js","components/GroupsTabComponent.js","components/ProfileComponent.js","components/NavBarComponent.js","components/ProfileSettingsComponent.js","components/LoginComponent.js","components/RegisterComponent.js","components/DiscussionBoardComponent.js","components/HomePageComponent.js","components/GroupComponent.js","components/VisitingProfileComponent.js","App.js","serviceWorker.js","index.js"],"names":["query","fetch","method","headers","then","response","json","imdbId","credentials","catch","e","console","log","user","SearchRowComponent","props","createNewDiscussion","show","ids","imdb","body","JSON","stringify","addShow","currentUser","id","state","userId","loggedOut","bind","key","this","className","to","title","onClick","type","React","Component","SearchTableComponent","shows","map","trakt","SearchComponent","getCurrentUser","UserService","setState","findMovies","PrototypeService","movies","findSeries","series","getShows","trimmedMovieJSON","movie","trimmedSeriesJSON","concat","search_query","match","params","placeholder","value","onChange","target","onKeyPress","history","push","ResultInfoComponent","result","poster_path","imdb_id","movie_results","release_date","src","alt","vote_average","overview","ShowPosterComponent","poster","_id","details","mobileView","layout","style","width","marginRight","marginBottom","href","setSelected","ShowListComponent","capitalize","s","charAt","toUpperCase","slice","ProgressComponent","height","role","aria-valuenow","aria-valuemin","aria-valuemax","marginTop","SummaryCardComponent","findDiscussionId","discussionId","description","ProfileTabsComponent","GenreBadgesComponent","genre","PostListComponent","findPostsForUser","posts","post","message","GroupsTabComponent","watchGroup","members","groupLeaderId","hasGroup","editingTitle","userQuery","group","leaderId","queryId","newUser","finally","name","findUser","member","username","createGroup","ProfileComponent","logout","password","visiting","favoriteGenres","watchlist","groups","showId","status","prevProps","prevState","snapshot","fontSize","NavBarComponent","aria-haspopup","aria-expanded","ProfileSettingsComponent","update","firstName","lastName","email","htmlFor","readOnly","disabled","selected","LoginComponent","login","Register","register","DiscussionBoardComponent","onCommentChange","commentText","findPosts","discId","discussion","onPost","date","Date","HomePageComponent","userRole","App","path","exact","component","RegisterComponent","render","GroupComponent","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.9bac415e.chunk.js","sourcesContent":["const findMovies = (query) =>\r\n    fetch(\"https://api.trakt.tv/search/movie?query=\" + query, {\r\n        method: 'GET',\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'trakt-api-version': 2,\r\n            'trakt-api-key': 'bc999a4f47069a533f0c8820ec7897e5d5ef6395c977b5935a52d3a2b013a600'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst findSeries = (query) =>\r\n    fetch(\"https://api.trakt.tv/search/show?query=\" + query, {\r\n        method: 'GET',\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'trakt-api-version': 2,\r\n            'trakt-api-key': 'bc999a4f47069a533f0c8820ec7897e5d5ef6395c977b5935a52d3a2b013a600'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst getIMDBDetails = (imdbId) =>\r\n    fetch(`https://api.themoviedb.org/3/find/${imdbId}?api_key=54fa45f317f011fa4fd57c4d1840485c&language=en-US&external_source=imdb_id`)\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    findMovies,\r\n    findSeries,\r\n    getIMDBDetails\r\n}","const getAllUsers = () => {\r\n    return fetch('https://wbdv-generic-server.herokuapp.com/api/group18/users')\r\n        .then(response => response.json())\r\n}\r\n\r\nconst getUser = (userId) => {\r\n    return fetch(`https://wbdv-generic-server.herokuapp.com/api/group18/${userId}`)\r\n        .then(response => response.json())\r\n}\r\n\r\n// const deleteModule = (moduleId) => {\r\n//     return fetch('https://wbdv-generic-server.herokuapp.com/api/001298520/modules/' + moduleId,{\r\n//         method: 'DELETE'\r\n//     })\r\n//         .then(response => response.json())\r\n// }\r\n//\r\n\r\nconst createUser = (user) => {\r\n    return fetch(`https://wbdv-generic-server.herokuapp.com/api/group18/users`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nconst updateUser = (userId, user) =>\r\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/group18/users/${userId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst getCurrentUser = () => {\r\n    return fetch('http://localhost:8080/api/profile', {\r\n        // return fetch('https://wbdv-team18-final-project.herokuapp.com/api/profile', {\r\n        credentials: 'include'\r\n    }).then(response => response.json()).catch(e => {\r\n        console.log(e);\r\n    }).then(user => {\r\n        return user\r\n    })\r\n};\r\n\r\nexport default {\r\n    getAllUsers,\r\n    getUser,\r\n    createUser,\r\n    updateUser,\r\n    getCurrentUser\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {createShowDiscussion} from \"../services/DiscussionService\";\r\nimport PrototypeService from \"../services/PrototypeService\";\r\n\r\nexport default class SearchRowComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userId: '',\r\n            show: {imdbId: '', userId: ''},\r\n            loggedOut: true\r\n        }\r\n\r\n        this.createNewDiscussion = this.createNewDiscussion.bind(this);\r\n    }\r\n\r\n    createNewDiscussion = () => createShowDiscussion({\r\n        imdbId: this.props.show.ids.imdb\r\n        // ,\r\n        // userId: ''\r\n    });\r\n\r\n    componentDidMount() {\r\n        // fetch(\"http://localhost:8080/api/profile\", {\r\n        //     method: 'POST',\r\n        //     credentials: \"include\"\r\n        // })\r\n        //     .then(response => {\r\n        //         console.log(response)\r\n        //         return response.json()\r\n        //     })\r\n        //     .catch(e => {\r\n        //         // alert(e)\r\n        //         // this.props.history.push(\"/\")\r\n        //     })\r\n        //     .then(user => {\r\n        //         if (user) {\r\n        //             let showId = this.props.show.ids.imdb\r\n        //             let userId = user.id\r\n        //             this.setState({\r\n        //                 userId: user.id,\r\n        //                 show: {imdbId: showId, userId: userId}\r\n        //             })\r\n        //         } else {\r\n        //             this.setState({\r\n        //                 loggedOut: true\r\n        //             })\r\n        //         }\r\n        //     })\r\n    }\r\n\r\n    addShow = () => {\r\n        fetch(`http://localhost:8080/api/users/${this.props.currentUser.id}/shows`, {\r\n        // fetch(`https://wbdv-team18-final-project.herokuapp.com/api/users/${this.props.currentUser.id}/shows`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                imdbId: this.props.show.ids.imdb\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        }).then(response => response.json());\r\n        \r\n        // this.createNewDiscussion();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr key={this.props.show.key}>\r\n                <td className=\"text-md-left\">\r\n                    <Link to={`/result/${this.props.show.ids.imdb}`}>\r\n                        {this.props.show.title}\r\n                    </Link>\r\n\r\n                    {\r\n                        this.props.currentUser &&\r\n                        <div className=\"float-right\">\r\n                            <button\r\n                                onClick={this.addShow}\r\n                                className=\"btn btn-outline-primary\" type=\"button\">Add Show\r\n                            </button>\r\n                        </div>\r\n                    }\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}","export const findPostsForDiscussion = (showId) =>\r\n  fetch(`http://localhost:8080/api/discussions/${showId}`)\r\n    // fetch(`https://wbdv-team18-final-project.herokuapp.com/api/discussions/${showId}`)\r\n    .then(response => response.json())\r\n\r\nexport const findPostsForUser = (userId) =>\r\n  fetch(`http://localhost:8080/api/users/${userId}/posts`)\r\n    // fetch(`https://wbdv-team18-final-project.herokuapp.com/api/discussions/${showId}`)\r\n    .then(response => response.json())\r\n\r\nexport const createPost = (showId, userId, post) =>\r\n  fetch(`http://localhost:8080/api/discussions/${showId}/posts/${userId}`, {\r\n    // fetch(`https://wbdv-team18-final-project.herokuapp.com/api/discussions/${showId}/posts/${userId}`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(post),\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    }\r\n  })\r\n    .then(response => response.json())\r\n\r\nexport const createShowDiscussion = (show) =>\r\n  fetch(`http://localhost:8080/api/discussions`, {\r\n    // fetch(`https://wbdv-team18-final-project.herokuapp.com/api/discussions`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(show),\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    }\r\n  })\r\n    .then(response => response.json())\r\n\r\nexport const findShowByImdb = (imdb) =>\r\n  fetch(`http://localhost:8080/api/shows/${imdb}`)\r\n    // fetch(`https://wbdv-team18-final-project.herokuapp.com/api/shows/${imdb}`)\r\n    .then(response => response.json())","import React from \"react\";\r\nimport SearchRowComponent from \"./SearchRowComponent\";\r\n\r\n\r\nexport default class SearchTableComponent\r\n    extends React.Component {\r\n    render() {\r\n        return (\r\n            <div /*className=\"row\"*/>\r\n                {/*<div className=\"col-3\">*/}\r\n                {/*    <div style={{height: 1000 }} className=\"border\">Maybe the filter stuff</div>*/}\r\n                {/*</div>*/}\r\n                <div /*className=\"col-9\"*/>\r\n                    <table className=\"table table-striped table-hover\r\n                table-bordered\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th className=\"text-md-left\">\r\n                                <label>Results\r\n                                </label>\r\n                            </th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.props.shows.map(show =>\r\n                                <SearchRowComponent\r\n                                    key={show.ids.trakt} show={show} currentUser={this.props.currentUser}/>\r\n                            )\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport PrototypeService from \"../services/PrototypeService\";\r\nimport UserService from \"../services/UserService\";\r\nimport SearchTableComponent from \"./SearchTableComponent\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class SearchComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            search_query: \"\",\r\n            movies: [],\r\n            series: [],\r\n            shows: [],\r\n            user: null\r\n        }\r\n\r\n        this.getCurrentUser = this.getCurrentUser.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.match.params.query) {\r\n            this.findMovies(this.props.match.params.query)\r\n        }\r\n        else {\r\n            this.findMovies(\"\")\r\n        }\r\n        this.getCurrentUser();\r\n    }\r\n\r\n    getCurrentUser = () => UserService.getCurrentUser().then(user => {\r\n        this.setState({\r\n            user: user\r\n        });\r\n    });\r\n\r\n\r\n    findMovies = (query) => {\r\n        PrototypeService.findMovies(query)\r\n            .then(movies => {\r\n                this.setState({\r\n                    movies: movies\r\n                })\r\n                this.findSeries(query)\r\n                /*console.log(this.state.movies)*/\r\n            }\r\n            )\r\n    }\r\n\r\n    findSeries = (query) => {\r\n        PrototypeService.findSeries(query).then(series => {\r\n            this.setState(\r\n                {\r\n                    series: series\r\n                })\r\n            this.getShows()\r\n            /*console.log(this.state.movies)*/\r\n        }\r\n        )\r\n    }\r\n\r\n    getShows = () => {\r\n        let trimmedMovieJSON = this.state.movies.map(movie => movie.movie)\r\n        let trimmedSeriesJSON = this.state.series.map(series => series.show)\r\n\r\n        this.setState({\r\n            shows: trimmedMovieJSON.concat(trimmedSeriesJSON)\r\n        })\r\n\r\n        console.log(this.state.shows)\r\n    }\r\n\r\n    render() {     \r\n        return (\r\n            <div>\r\n                <div className=\"input-group mb-3\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"form-control\"\r\n                        placeholder=\"Search for shows\"\r\n                        value={this.state.search_query}\r\n                        onChange={e => this.setState(\r\n                            { search_query: e.target.value })}\r\n                        onKeyPress={e => {\r\n                            console.log(e.key);\r\n                            if (e.key === \"Enter\") {\r\n                                this.props.history.push(`/search/${this.state.search_query}`);\r\n                                this.findMovies(this.state.search_query)\r\n                            }\r\n                        }} />\r\n                    <Link to={`/search/${this.state.search_query}`}>\r\n                        <div className=\"input-group-append\">\r\n                            <button\r\n                                className=\"btn btn-outline-success\"\r\n                                onClick={() => {\r\n                                    this.findMovies(this.state.search_query)\r\n                                }}>\r\n                                <i className=\"fa fa-search\" />\r\n                            </button>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n\r\n                <SearchTableComponent shows={this.state.shows} currentUser={this.state.user}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class ResultInfoComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const imdb_id = this.props.match.params.imdb_id\r\n        const tmdb_key = \"54fa45f317f011fa4fd57c4d1840485c\"\r\n        const tmdb_img_path = \"https://image.tmdb.org/t/p/w200\"\r\n        fetch(`https://api.themoviedb.org/3/find/${imdb_id}?api_key=${tmdb_key}&language=en-US&external_source=imdb_id`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                this.setState({\r\n                    result: result.movie_results[0],\r\n                    poster_path: tmdb_img_path + result.movie_results[0].poster_path\r\n                })\r\n            })\r\n    }\r\n\r\n    state = {\r\n        result: {},\r\n        poster_path: \"\"\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    {this.state.result.title}\r\n                    {\" (\" + this.state.result.release_date + \")\"}\r\n                </h1>\r\n                <img src={this.state.poster_path} alt=\"Poster\"/>\r\n                <h4>\r\n                    {this.state.result.vote_average}\r\n                </h4>\r\n                <p>\r\n                    {this.state.result.overview}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport PrototypeService from \"../services/PrototypeService\";\r\n\r\nclass ShowPosterComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            poster: \"\",\r\n            title: \"\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        {\r\n            this.props._id != null &&\r\n            PrototypeService.getIMDBDetails(this.props._id)\r\n                .then(details =>\r\n                    this.setState({\r\n                        poster: `https://image.tmdb.org/t/p/w200${details.movie_results[0].poster_path}`,\r\n                        title: details.movie_results[0].title\r\n                    })\r\n                )\r\n        }\r\n    }\r\n\r\n    setSelected() {\r\n        if (this.props.mobileView) {\r\n            this.props.history.push(`/result/${this.props._id}`)\r\n        } else {\r\n            this.props.history.push(`/profile/${this.props.layout}/${this.props._id}`)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card p-1 m-0 col-4 col-sm-4 col-md-3 col-lg-3\"\r\n                 id=\"foundShowContainer\"\r\n                 style={{width: 135, marginRight: 10, marginBottom: 10}}>\r\n\r\n                <a href={this.props.mobileView ? `/result/${this.props._id}` : `/profile/${this.props.layout}/${this.props._id}`}>\r\n                    <img src={this.state.poster}\r\n                         className=\"img-fluid img-responsive image\"\r\n                         alt={this.state.title}\r\n                         onClick={() => this.setSelected()}/>\r\n                </a>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ShowPosterComponent","import React from \"react\";\r\nimport ShowPosterComponent from \"./ShowPosterComponent\";\r\n\r\nexport default class ShowListComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    capitalize = (s) => {\r\n        if (typeof s !== 'string') return ''\r\n        if (s !== \"watchlist\" || s !== \"group\" || s !== \"posts\") return \"Watchlist\"\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h2 className=\"float-left\">{this.capitalize(this.props.layout)}</h2>\r\n                </div>\r\n\r\n                {/*<div className=\"input-group mb-3\">*/}\r\n                {/*    <input*/}\r\n                {/*        className=\"form-control\"*/}\r\n                {/*        type=\"form-control\"*/}\r\n                {/*        placeholder=\"Search watched shows\"/>*/}\r\n                {/*    <div className=\"input-group-append\">*/}\r\n                {/*        <button*/}\r\n                {/*            className=\"btn btn-outline-success\">*/}\r\n                {/*            <i className=\"fa fa-search\"/>*/}\r\n                {/*        </button>*/}\r\n                {/*    </div>*/}\r\n                {/*</div>*/}\r\n\r\n                <div className=\"row container ml-0 p-0\">\r\n                    {/*{console.log(this.props.shows)}*/}\r\n                    {\r\n                        this.props.shows.map(show =>\r\n                            <ShowPosterComponent\r\n                                mobileView={this.props.mobileView}\r\n                                layout={this.props.layout}\r\n                                key={show.imdbId}\r\n                                _id={show.imdbId}/>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst ProgressComponent = (props) =>\r\n    <div>\r\n        <div className=\"form-row\">\r\n            <div className=\"col-8\">\r\n                <h5 className=\"text-left\">Progress</h5>\r\n            </div>\r\n            <div className=\"col-4\">\r\n                <h6 className=\"text-right text-muted mt-2\">156 Episodes</h6>\r\n            </div>\r\n        </div>\r\n        <div className=\"progress\"\r\n             style={{height: 25}}>\r\n            <div className=\"progress-bar progress-bar-striped bg-info progress-bar-animated w-25\"\r\n                 role=\"progressbar\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                <h6 style={{marginTop: 5}}>Episode 32</h6>\r\n            </div>\r\n        </div>\r\n\r\n        <div>\r\n            <button className=\"mt-3 btn btn-sm btn-outline-success float-left\">Update Progress</button>\r\n            <button className=\"mt-3 btn btn-sm btn-outline-danger float-right\">Remove Show</button>\r\n        </div>\r\n    </div>\r\n\r\nexport default ProgressComponent","import React from \"react\";\r\nimport ProgressComponent from \"./ProgressComponent\";\r\nimport PrototypeService from \"../services/PrototypeService\";\r\nimport { findShowByImdb } from \"../services/DiscussionService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SummaryCardComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            poster: \"\",\r\n            title: \"\",\r\n            description: \"\",\r\n        }\r\n\r\n        this.findDiscussionId = this.findDiscussionId.bind(this);\r\n    }\r\n\r\n    findDiscussionId = () => findShowByImdb(this.props._id).then(show => {\r\n        this.setState({\r\n            discussionId: show.id\r\n        });\r\n        // alert(this.props._id);\r\n    });\r\n\r\n    componentDidMount() {\r\n        this.findDiscussionId();\r\n        PrototypeService.getIMDBDetails(this.props._id)\r\n            .then(details =>\r\n                this.setState({\r\n                    poster: `https://image.tmdb.org/t/p/w200${details.movie_results[0].poster_path}`,\r\n                    title: details.movie_results[0].title,\r\n                    description: details.movie_results[0].overview\r\n                })\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card position-fixed w-25 ml-5\">\r\n\r\n                <div className=\"card-body\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <h5 className=\"card-title\">{this.state.title}</h5>\r\n                        <Link to={`/profile/${this.props.layout}`}>\r\n                            <i className={\"fa fa-times text-danger\"} />\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <p className=\"card-text\">{this.state.description}</p>\r\n                    <Link to={`/discussions/${this.props._id}`}>\r\n                        <button className=\"btn btn-primary btn-block mt-2 mb-3\">\r\n                            Go to Discussion Board\r\n                        </button>\r\n                    </Link>\r\n                    {/* <a href={`/discussions/${this.props._id}`}\r\n                        className=\"card-link btn btn-primary btn-block mt-2 mb-3\">{`Go to Discussion Board`}</a> */}\r\n\r\n                    {this.props.layout === \"watchlist\" && <ProgressComponent />}\r\n\r\n                    {\r\n                        this.props.layout === \"wishlist\" &&\r\n                        <button className=\"btn btn-outline-warning\">Start Watching</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SummaryCardComponent","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ProfileTabsComponent = (props) =>\r\n    <div>\r\n        {\r\n            props.layout === \"watchlist\" &&\r\n            <ul className=\"nav nav-tabs flex-column flex-sm-row block\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/profile/watchlist\" className=\"nav-link active\">\r\n                        Watchlist\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/profile/group\" className=\"nav-link\">\r\n                        Group\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/profile/posts\" className=\"nav-link\">\r\n                        Posts\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        }\r\n        {\r\n            props.layout === \"group\" &&\r\n            <ul className=\"nav nav-tabs flex-column flex-sm-row block\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/profile/watchlist\" className=\"nav-link\">\r\n                        Watchlist\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/profile/group\" className=\"nav-link active\">\r\n                        Group\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/profile/posts\" className=\"nav-link\">\r\n                        Posts\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        }\r\n        {\r\n            props.layout === \"posts\" &&\r\n            <ul className=\"nav nav-tabs flex-column flex-sm-row block\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/profile/watchlist\" className=\"nav-link\">\r\n                        Watchlist\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/profile/group\" className=\"nav-link\">\r\n                        Group\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/profile/posts\" className=\"nav-link active\">\r\n                        Posts\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        }\r\n    </div>\r\n\r\nexport default ProfileTabsComponent","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst GenreBadgesComponent = (props) =>\r\n    <div>\r\n        <a href={`/search/${props.genre}`}\r\n           className=\"badge badge-secondary bg-info wbdv-favorite-genre-tag\">{props.genre}</a>\r\n    </div>\r\n\r\nexport default GenreBadgesComponent","import React from \"react\";\r\nimport { findPostsForUser } from \"../services/DiscussionService\";\r\n\r\n\r\nclass PostListComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: []\r\n        }\r\n\r\n        this.findPostsForUser = this.findPostsForUser.bind(this);\r\n    }\r\n\r\n    // todo check how this works when view other profiles\r\n    // user id needs to passed from the parent, either current user or from match params\r\n    findPostsForUser = () => findPostsForUser(this.props.userId).then(response => {\r\n        console.log(response);\r\n        this.setState({\r\n            posts: response\r\n        });\r\n        console.log(this.state.posts);\r\n    });\r\n\r\n    componentDidMount() {\r\n        this.findPostsForUser();\r\n        // console.log(this.state.posts);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.posts.map((post) => {\r\n                    return (\r\n                        <div key={post.id}>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    Username Here\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"card-text\">\r\n                                        {post.message}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>)\r\n                })}\r\n                {/* <div className=\"list-group\">\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action flex-column align-items-start active\">\r\n                        <div className=\"d-flex w-100 justify-content-between\">\r\n                            <h5 className=\"mb-1\">List group item heading</h5>\r\n                            <small>3 days ago</small>\r\n                        </div>\r\n                        <p className=\"mb-1\">Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget\r\n                            risus\r\n                            varius blandit.</p>\r\n                        <small>Donec id elit non mi porta.</small>\r\n                    </a>\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n                        <div className=\"d-flex w-100 justify-content-between\">\r\n                            <h5 className=\"mb-1\">List group item heading</h5>\r\n                            <small className=\"text-muted\">3 days ago</small>\r\n                        </div>\r\n                        <p className=\"mb-1\">Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget\r\n                            risus\r\n                            varius blandit.</p>\r\n                        <small className=\"text-muted\">Donec id elit non mi porta.</small>\r\n                    </a>\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n                        <div className=\"d-flex w-100 justify-content-between\">\r\n                            <h5 className=\"mb-1\">List group item heading</h5>\r\n                            <small className=\"text-muted\">3 days ago</small>\r\n                        </div>\r\n                        <p className=\"mb-1\">Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget\r\n                            risus\r\n                            varius blandit.</p>\r\n                        <small className=\"text-muted\">Donec id elit non mi porta.</small>\r\n                    </a>\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostListComponent","import React from \"react\";\r\nimport GroupCardComponent from \"./GroupCardComponent\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass GroupsTabComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {},\r\n            watchGroup: {},\r\n            members: [],\r\n            groupLeaderId: '',\r\n            hasGroup: false,\r\n            editingTitle: false,\r\n            title: '',\r\n            userQuery: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://wbdv-team18-final-project.herokuapp.com/api/profile\", {\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => {\r\n                console.log(response)\r\n                return response.json()\r\n            })\r\n            .catch(e => {\r\n            })\r\n            .then(user => {\r\n                if (user != null) {\r\n                    this.setState({\r\n                        user: user\r\n                    })\r\n                    fetch(`https://wbdv-team18-final-project.herokuapp.com/api/users/${user.id}/group`)\r\n                        .then(response => response.json()).catch(e=> {}).then(group => {\r\n                            if (group != null) {\r\n                            this.setState({\r\n                                watchGroup: group,\r\n                                hasGroup: true,\r\n                                groupLeaderId: group.leaderId\r\n                            })\r\n                            fetch(`https://wbdv-team18-final-project.herokuapp.com/api/groups/${group.id}/users`)\r\n                                .then(response => response.json()).then(members => {\r\n                                this.setState({\r\n                                    members: members\r\n                                })})}\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    createGroup(userId, user) {\r\n        fetch(`https://wbdv-team18-final-project.herokuapp.com/api/groups`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(user),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }}).then(response => response.json()).then(watchGroup => {\r\n                fetch(`https://wbdv-team18-final-project.herokuapp.com/api/users/${userId}/group`, {\r\n                    method: 'PUT',\r\n                    body: JSON.stringify(watchGroup),\r\n                    headers: {\r\n                        'content-type': 'application/json'\r\n                    }})\r\n                    .then(response => response.json()).then(watchGroup => {\r\n                        this.setState({\r\n                            watchGroup: watchGroup,\r\n                            hasGroup: true,\r\n                            groupLeaderId: userId\r\n                        })\r\n            })\r\n        })\r\n    }\r\n\r\n    findUser(queryId) {\r\n        fetch(`https://wbdv-team18-final-project.herokuapp.com/api/groups/${this.state.watchGroup.id}/users/${queryId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }}).then(response => response.json()).then(newUser => {\r\n            fetch(`https://wbdv-team18-final-project.herokuapp.com/api/users/${queryId}/group`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify(this.state.watchGroup),\r\n                headers: {\r\n                    'content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(watchGroup => {\r\n                this.setState({\r\n                    watchGroup: watchGroup,\r\n                    userQuery: \"\"\r\n                })\r\n            }).finally(this.props.history.push(\"/profile/group\"))\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.hasGroup &&\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <div className=\"float-left\">\r\n                                <h4>{this.state.watchGroup.name}</h4>\r\n                            </div>\r\n                            {\r\n                                this.state.groupLeaderId === this.state.user.id &&\r\n                                <button\r\n                                    className=\"btn ml-1\">\r\n                                    <i className=\"fa fa-pencil\"/>\r\n                                </button>\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            {\r\n                                this.state.groupLeaderId === this.state.user.id &&\r\n                                <div className=\"input-group mb-3\">\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"form-control\"\r\n                                        placeholder=\"Enter User ID\"\r\n                                        value={this.state.userQuery}\r\n                                        onChange={e => this.setState(\r\n                                            {userQuery: e.target.value})\r\n                                        }/>\r\n                                    <div className=\"input-group-append\">\r\n                                        <a href=\"/profile/group\">\r\n                                            <button\r\n                                                onClick={() => this.findUser(this.state.userQuery)}\r\n                                                className=\"btn btn-outline-success\">\r\n                                                Add Member\r\n                                            </button>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            </div>\r\n\r\n                        <div className=\"col-5\">\r\n                            <h6>Group Members</h6>\r\n                            <ul className=\"list-group list-group-flush\">\r\n                                {\r\n                                    this.state.members.map(member =>\r\n                                        <li className=\"list-group-item\">\r\n                                            <Link\r\n                                                to={member.id === this.state.user.id ?\r\n                                                    `/profile/watchlist` : `/profile/${member.id}`}>\r\n                                                {\r\n                                                    member.id === this.state.groupLeaderId ? `Group Leader: ` : `Member: `\r\n                                                }\r\n                                                {\r\n                                                        member.id === this.state.user.id ?\r\n                                                        `(You) ${member.username}` : member.username\r\n                                                    }\r\n                                            </Link>\r\n                                            {\r\n                                                this.state.groupLeaderId === this.state.user.id &&\r\n                                                <button className=\"btn btn-danger btn-sm float-right\">\r\n                                                    <i className=\"fa fa-user-times\"/>\r\n                                                </button>\r\n                                            }\r\n\r\n                                        </li>\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col-7\">\r\n                            <h6>Group Watchlist</h6>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {\r\n                    !this.state.hasGroup &&\r\n                    <div>\r\n                        <button\r\n                            onClick={() => this.createGroup(\r\n                                this.props.userId, this.state.user)}\r\n                            className=\"btn btn-secondary mb-2\">Create Group\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GroupsTabComponent","import React from \"react\";\r\nimport ShowListComponent from \"./ShowListComponent\";\r\nimport SummaryCardComponent from \"./SummaryCardComponent\";\r\nimport ProfileTabsComponent from \"./ProfileTabsComponent\";\r\nimport GenreBadgesComponent from \"./GenreBadgesComponent\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport PostListComponent from \"./PostListComponent\";\r\nimport GroupsTabComponent from \"./GroupsTabComponent\";\r\n\r\nexport default class ProfileComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            userId: '',\r\n            visiting: this.props.match.params.layout !== \"watchlist\" &&\r\n                this.props.match.params.layout !== \"group\" &&\r\n                this.props.match.params.layout !== \"posts\",\r\n\r\n            favoriteGenres: [\"action\", \"comedy\", \"fantasy\", \"sci-fi\", \"anime\"],\r\n            watchlist: [],\r\n            groups: [],\r\n            posts: [],\r\n\r\n            showId: this.props.match.params.showId,\r\n            layout: this.props.match.params.layout\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.visiting) {\r\n            this.setState({\r\n                userId: this.state.layout,\r\n            })\r\n            fetch(`http://localhost:8080/api/users/${this.state.layout}`)\r\n            // fetch(`https://wbdv-team18-final-project.herokuapp.com/api/users/${this.state.layout}`)\r\n                .catch(e => console.log(e)).then(response => response.json())\r\n                .then(user => this.setState({username: user.username}))\r\n                .then(status =>\r\n                    fetch(`http://localhost:8080/api/users/${this.state.layout}/shows`)\r\n                    // fetch(`https://wbdv-team18-final-project.herokuapp.com/api/users/${this.state.layout}/shows`)\r\n                        .then(response => response.json())\r\n                        .then(watchlist => this.setState({\r\n                            watchlist: watchlist\r\n                        })).then(status =>\r\n                        fetch(`http://localhost:8080/api/users/${this.state.layout}/groups`)\r\n                        // fetch(`https://wbdv-team18-final-project.herokuapp.com/api/users/${this.state.layout}/group`)\r\n                            .then(response => response.json())\r\n                            .then(groups => this.setState({\r\n                                groups: groups\r\n                            })).then(status => console.log(this.state.groups)\r\n                        )\r\n                    ))\r\n        } else {\r\n            // fetch(\"https://wbdv-team18-final-project.herokuapp.com/api/profile\", {\r\n                fetch(\"http://localhost:8080/api/profile\", {\r\n                method: 'POST',\r\n                credentials: \"include\"\r\n            })\r\n                .then(response => {\r\n                    console.log(\"profile comp response below\")\r\n                    console.log(response)\r\n                    return response.json()\r\n                })\r\n                .catch(e => {\r\n                    this.props.history.push(\"/\")\r\n                })\r\n                .then(user => {\r\n                    if (user) {\r\n                        console.log(\"entered conditional\")\r\n                        this.setState({\r\n                            username: user.username,\r\n                            password: user.password,\r\n                            userId: user.id,\r\n                        })\r\n                    }\r\n                }).then(status =>\r\n                fetch(`http://localhost:8080/api/users/${this.state.userId}/shows`)\r\n                // fetch(`https://wbdv-team18-final-project.herokuapp.com/api/users/${this.state.userId}/shows`)\r\n                    .then(response => response.json())\r\n                    .then(watchlist => this.setState({\r\n                        watchlist: watchlist\r\n                    }))\r\n                //TODO: come back to this\r\n                //     .then(status =>\r\n                //     // fetch(`http://localhost:8080/api/users/${this.state.userId}/groups`)\r\n                //     fetch(`https://wbdv-team18-final-project.herokuapp.com/api/users/${this.state.userId}/group`)\r\n                //         .then(response => response.json())\r\n                //         .then(groups => this.setState({\r\n                //             groups: groups\r\n                //         })).then(status => console.log(this.state.groups)\r\n                //     )\r\n                // )\r\n\r\n                )\r\n        }\r\n\r\n    }\r\n\r\n    logout = () => {\r\n        fetch(\"http://localhost:8080/api/logout\", {\r\n        // fetch(\"https://wbdv-team18-final-project.herokuapp.com/api/logout\", {\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => this.props.history.push(\"/\"))\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.showId !== this.props.match.params.showId) {\r\n            this.setState({\r\n                showId: this.props.match.params.showId\r\n            })\r\n        }\r\n        if (prevProps.match.params.layout !== this.props.match.params.layout) {\r\n            this.setState({\r\n                layout: this.props.match.params.layout\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-lg-2 col-md-2 col-sm-2\">\r\n                        <i className=\"fa fa-user-circle-o mt-2\" style={{fontSize: 80}}/>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-10 col-md-10 col-sm-10\">\r\n                        <div className=\"d-flex {/*justify-content-between*/}\">\r\n                            <h2>{this.state.username}</h2>\r\n                            {\r\n                                this.props.match.params.layout !== \"info\" &&\r\n                                !this.state.visiting &&\r\n                                <a href={`/profile/info`}>\r\n                                    <button\r\n                                            className=\"btn btn-outline-info btn-sm w-auto ml-4 mt-2\">\r\n                                        Edit Profile\r\n                                    </button>\r\n                                </a>\r\n                            }\r\n                            {\r\n                                !this.state.visiting &&\r\n                                <button\r\n                                    onClick={this.logout}\r\n                                    className=\"btn btn-sm btn-outline-danger w-auto h-75 ml-2 mt-2\">\r\n                                    Logout\r\n                                </button>\r\n                            }\r\n                        </div>\r\n                        <p className=\"m-0\">Top 5 Genres</p>\r\n                        <div className=\"row pl-3\">\r\n                            {this.state.favoriteGenres.map(genre => <GenreBadgesComponent genre={genre}/>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 mt-3\">\r\n                        <ProfileTabsComponent layout={this.state.layout}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-7\">\r\n                        <br/>\r\n\r\n                        <MediaQuery query='(min-width: 1024px)'>\r\n                            {/*{console.log(this.state.watchlist)}*/}\r\n                            <div>\r\n                                {this.state.layout === \"watchlist\" &&\r\n                                <ShowListComponent\r\n                                    {...this.props}\r\n                                    mobileView={false}\r\n                                    layout={this.state.layout}\r\n                                    shows={this.state.watchlist}/>\r\n                                }\r\n                                {this.state.visiting &&\r\n                                <ShowListComponent\r\n                                    {...this.props}\r\n                                    mobileView={true}\r\n                                    layout={this.state.layout}\r\n                                    shows={this.state.watchlist}/>\r\n                                }\r\n                            </div>\r\n                        </MediaQuery>\r\n                        <MediaQuery query='(max-width: 1023px)'>\r\n                            <div>\r\n                                {this.state.layout === \"watchlist\" &&\r\n                                <ShowListComponent\r\n                                    {...this.props}\r\n                                    mobileView={true}\r\n                                    layout={this.state.layout}\r\n                                    shows={this.state.watchlist}/>\r\n                                }\r\n                                {this.state.visiting &&\r\n                                <ShowListComponent\r\n                                    {...this.props}\r\n                                    mobileView={true}\r\n                                    layout={this.state.layout}\r\n                                    shows={this.state.watchlist}/>\r\n                                }\r\n                            </div>\r\n                        </MediaQuery>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-5\">\r\n                        {\r\n                            this.state.showId &&\r\n                            <SummaryCardComponent\r\n                                {...this.props}\r\n                                layout={this.state.layout}\r\n                                _id={this.state.showId}\r\n                                key={this.state.showId}/>\r\n                        }\r\n                        </div>\r\n            </div>\r\n            {\r\n                this.state.layout === \"group\" &&\r\n                <span>\r\n                    {/* <GroupsTabComponent\r\n                        {...this.props}\r\n                        userId={this.state.userId}\r\n                        groups={this.state.groups}/> */}\r\n                </span>\r\n            }\r\n            {\r\n                this.state.layout === \"posts\" &&\r\n                <span>\r\n                    <PostListComponent userId={this.state.userId}/>\r\n                </span>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst NavBarComponent = () =>\r\n    <div>\r\n        <nav className=\"nav navbar-light bg-white justify-content-between fixed-top wbdv-site-nav-bar\">\r\n            <div className=\"navbar-header\">\r\n                <a className=\"navbar-brand\" href=\"/\">What Are We Watching</a>\r\n            </div>\r\n\r\n            <ul className=\"nav nav-pills d-none d-sm-flex\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/search\" className=\"nav-link\" role=\"button\" aria-haspopup=\"true\"\r\n                          aria-expanded=\"false\">\r\n                        <i className=\"fa fa-search\"/>\r\n                    </Link>\r\n                </li>\r\n\r\n                {/* <li className=\"nav-item dropdown\">\r\n                    <Link to=\"/discussions/home\" className=\"nav-link\" role=\"button\" aria-haspopup=\"true\"\r\n                          aria-expanded=\"false\">\r\n                        <i className=\"fa fa-commenting\"/>\r\n                    </Link>\r\n                </li> */}\r\n\r\n                <li className=\"nav-item\">\r\n                    <a href=\"/profile/watchlist\" className=\"nav-link\" role=\"button\" aria-haspopup=\"true\"\r\n                          aria-expanded=\"false\">\r\n                        <i className=\"fa fa-user\"/>\r\n                    </a>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/registration\" className=\"nav-link\" role=\"button\" aria-haspopup=\"true\"\r\n                          aria-expanded=\"false\">\r\n                        Register\r\n                    </Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/login\" className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\r\n                        {/*<i className=\"fa fa-sign-in\"></i>*/}\r\n                        Login\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n\r\n        <div className=\"container nav-2 d-sm-none d-flex justify-content-center\">\r\n            <ul className=\"nav nav-pills nav-fill\">\r\n                <li className=\"active\"><a href=\"#\">Search</a></li>\r\n                <li className=\"\"><a href=\"#\">Discussions</a></li>\r\n                <li className=\"\"><a href=\"#\">Profile</a></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\nexport default NavBarComponent","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass ProfileSettingsComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            role: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            email: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:8080/api/profile\", {\r\n        // fetch(\"https://wbdv-team18-final-project.herokuapp.com/api/profile\", {\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => {\r\n                console.log(response)\r\n                return response.json()\r\n            })\r\n            .catch(e => {\r\n                this.props.history.push(\"/\")\r\n            })\r\n            .then(user => {\r\n                if (user)\r\n                    this.setState({\r\n                        username: user.username, password: user.password,\r\n                        role: user.role, firstName: user.firstName,\r\n                        lastName: user.lastName, email: user.email\r\n                    })\r\n            })\r\n    }\r\n\r\n    update = () => {\r\n        fetch(\"http://localhost:8080/api/profile\", {\r\n        // fetch(\"https://wbdv-team18-final-project.herokuapp.com/api/profile\", {\r\n            body: JSON.stringify({\r\n                username: this.state.username, password: this.state.password,\r\n                role: this.state.role, firstName: this.state.firstName, lastName:\r\n                this.state.lastName, email: this.state.email\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            method: 'PUT',\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => this.setState({\r\n                username: user.username, password: user.password\r\n            }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<div className=\"alert alert-success wbdv-message\">*/}\r\n                {/*    <strong>Success!</strong> Changes saved successfully.*/}\r\n                {/*</div>*/}\r\n\r\n                <div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label\"\r\n                               htmlFor=\"username\"> Username </label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input id=\"username\"\r\n                                   type=\"text\"\r\n                                   readOnly\r\n                                   className=\"form-control wbdv-field wbdv-username\"\r\n                                   placeholder={this.state.username}\r\n                                   value={this.state.username}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label\"\r\n                               htmlFor=\"password\"> Password </label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input id=\"password\"\r\n                                   type=\"password\"\r\n                                   value={this.state.password}\r\n                                   className=\"form-control wbdv-field wbdv-password\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label\"\r\n                               htmlFor=\"role\"> Role </label>\r\n                        <div className=\"col-sm-10\">\r\n                            <select className=\"form-control wbdv-field wbdv-role\" disabled=\"true\" id=\"role\">\r\n                                <option selected={this.state.role === \"LEADER\"} value=\"LEADER\">Group Leader</option>\r\n                                <option selected={this.state.role === \"MEMBER\"} value=\"MEMBER\">Member</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label\"\r\n                               htmlFor=\"firstName\"> First Name </label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input id=\"firstName\"\r\n                                   type=\"text\"\r\n                                   value={this.state.firstName}\r\n                                   className=\"form-control wbdv-field\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label\"\r\n                               htmlFor=\"lastName\"> Last Name </label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input id=\"lastName\"\r\n                                   type=\"text\"\r\n                                   value={this.state.lastName}\r\n                                   className=\"form-control wbdv-field\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label\"\r\n                               htmlFor=\"email\"> Email </label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input id=\"email\"\r\n                                   type=\"email\"\r\n                                   value={this.state.email}\r\n                                   className=\"form-control wbdv-field wbdv-email\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <br/>\r\n\r\n                <a className=\"btn btn-danger wbdv-button wbdv-update\" href=\"/profile/watchlist\">\r\n                    Back To Profile\r\n                </a>\r\n                {/*disabled if no changes*/}\r\n                <button\r\n                    onClick={this.update}\r\n                    className=\"btn btn-success float-right wbdv-button wbdv-update\">\r\n                    Update Profile\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileSettingsComponent","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class LoginComponent extends React.Component {\r\n    state = {\r\n        username: '',\r\n        password: ''\r\n    }\r\n    login = () => {\r\n        // fetch(\"https://wbdv-team18-final-project.herokuapp.com/api/login\", {\r\n        fetch(\"http://localhost:8080/api/login\", {\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        }).then(response => response.json())\r\n            .catch(e => {\r\n                this.props.history.push(\"/login\")\r\n            })\r\n            .then(currentUser => {\r\n                if (currentUser)\r\n                    this.props.history.push(\"/profile/watchlist\")\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Login</h1>\r\n                <input\r\n                    onChange={(e) => this.setState({username: e.target.value})}\r\n                    className=\"form-control\"/>\r\n                <input\r\n                    onChange={(e) => this.setState({password: e.target.value})}\r\n                    className=\"form-control\"/>\r\n                <button\r\n                    onClick={this.login}\r\n                    className=\"btn btn-primary\">\r\n                    Login\r\n                </button>\r\n                <Link to=\"/registration\">Sign up</Link>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class Register extends React.Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        role: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        email: ''\r\n    }\r\n    register = () => {\r\n        fetch(\"http://localhost:8080/api/register\", {\r\n        // fetch(\"https://wbdv-team18-final-project.herokuapp.com/api/register\", {\r\n            body: JSON.stringify({\r\n                username: this.state.username, password: this.state.password,\r\n                role: this.state.role, firstName: this.state.firstName,\r\n                lastName: this.state.lastName, email: this.state.email\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        }).then(response => response.json())\r\n            .then(currentUser => this.props.history.push(\"/profile/watchlist\"))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* add css padding */}\r\n                <h1>Register</h1>\r\n                <input\r\n                    placeholder=\"Username\"\r\n                    onChange={(e) => this.setState({username: e.target.value})}\r\n                    className=\"form-control\"/>\r\n                <input\r\n                    placeholder=\"Password\"\r\n                    onChange={(e) => this.setState({password: e.target.value})}\r\n                    className=\"form-control\"/>\r\n                <select\r\n                    onChange={(e) => this.setState({role: e.target.value})}\r\n                    value={this.state.role}\r\n                    className=\"custom-select custom-select\">\r\n                    <option selected disabled> Choose User Role</option>\r\n                    <option value=\"LEADER\">\r\n                        Group Leader\r\n                    </option>\r\n                    <option value=\"MEMBER\">\r\n                        Member\r\n                    </option>\r\n                </select>\r\n                <input\r\n                    placeholder=\"First Name\"\r\n                    onChange={(e) => this.setState({firstName: e.target.value})}\r\n                    className=\"form-control\"/>\r\n                <input\r\n                    placeholder=\"Last Name\"\r\n                    onChange={(e) => this.setState({lastName: e.target.value})}\r\n                    className=\"form-control\"/>\r\n                <input\r\n                    placeholder=\"Email\"\r\n                    onChange={(e) => this.setState({email: e.target.value})}\r\n                    className=\"form-control\"/>\r\n                <button\r\n                    onClick={this.register}\r\n                    className=\"btn btn-primary\">\r\n                    Register\r\n                </button>\r\n                <Link to=\"/login\">Sign in</Link>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { findPostsForDiscussion, createPost } from \"../services/DiscussionService\";\r\nimport UserService from \"../services/UserService\";\r\n\r\nclass DiscussionBoardComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.discussionId = this.props.match.params.discId;\r\n        this.state = {\r\n            commentText: \"\",\r\n            posts: [],\r\n            user: {\r\n                id: 10,\r\n            }\r\n        }\r\n\r\n        this.getCurrentUser = this.getCurrentUser.bind(this);\r\n\r\n        this.onCommentChange = this.onCommentChange.bind(this);\r\n\r\n        this.findPosts = this.findPosts.bind(this);\r\n\r\n        console.log(\"getting current user\");\r\n        this.getCurrentUser();\r\n        console.log(\"done current user\");\r\n    }\r\n\r\n    getCurrentUser = () => UserService.getCurrentUser().then(response => {\r\n        this.setState({\r\n            user: response\r\n        })\r\n        console.log(\"state user below\");\r\n        console.log(this.state.user.id);\r\n    });\r\n\r\n    onCommentChange = e => this.setState({ commentText: e.target.value });\r\n\r\n    findPosts = () => findPostsForDiscussion(this.props.match.params.discId).then(discussion => {\r\n        this.setState({\r\n            posts: discussion\r\n        })\r\n    });\r\n\r\n    // onPost = e => alert(new Date());\r\n\r\n    onPost = e => createPost(this.discussionId, this.state.user.id, {\r\n        message: this.state.commentText,\r\n        date: new Date()\r\n    }).then(response => {\r\n        this.findPosts();\r\n    });\r\n    \r\n    // onPost = e => createPost(this.discussionId, {\r\n    //     message: this.state.commentText,\r\n    //     date: new Date(),\r\n    //     user: this.state.currentUser\r\n    // }).then(response => {\r\n    //     this.findPosts();\r\n    // });\r\n\r\n\r\n    componentDidMount() {\r\n        this.findPosts();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Discussion Board</h1>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <textarea className=\"form-control\"\r\n                            value={this.state.commentText}\r\n                            onChange={this.onCommentChange}\r\n                            placeholder=\"Discuss Here!\">\r\n\r\n                            Discuss!\r\n                        </textarea>\r\n                        <button className=\"btn btn-success\" onClick={this.onPost}>\r\n                            Post\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {this.state.posts.map((post) => {\r\n                    return (\r\n                        <div key={post.id}>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    Username Here\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"card-text\">\r\n                                        {post.message}\r\n                                    </div>\r\n                                    <button className=\"btn btn-primary\">\r\n                                        Reply\r\n                                    </button>\r\n                                    {/* todo: pull in date from post */}\r\n                                </div>\r\n                            </div>\r\n                        </div>)\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DiscussionBoardComponent","import React from \"react\";\r\nimport ShowPosterComponent from \"./ShowPosterComponent\";\r\nimport PrototypeService from \"../services/PrototypeService\";\r\n\r\nclass HomePageComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            shows: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        PrototypeService.findMovies(\"\").then(movies =>\r\n        this.setState({shows: movies}));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>What Are We Watching?</h1>\r\n                <h3>Popular Movies</h3>\r\n                {console.log(this.state.shows)}\r\n                <div className=\"row container ml-0 p-0\">\r\n                {\r\n                    this.state.shows.map(show =>\r\n                        <ShowPosterComponent\r\n                            mobileView={true}\r\n                            layout={\"\"}\r\n                            key={show.movie.ids.imdb}\r\n                            _id={show.movie.ids.imdb}/>)\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePageComponent","import React from \"react\";\r\nimport ShowListComponent from \"./ShowListComponent\";\r\nimport SummaryCardComponent from \"./SummaryCardComponent\";\r\nimport ProfileTabsComponent from \"./ProfileTabsComponent\";\r\nimport GenreBadgesComponent from \"./GenreBadgesComponent\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport PostListComponent from \"./PostListComponent\";\r\nimport GroupsTabComponent from \"./GroupsTabComponent\";\r\n\r\nexport default class ProfileComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userId: '',\r\n            userRole: '',\r\n            // groupId: this.props.match.params.groupId,\r\n\r\n            watchlist: [],\r\n            posts: [],\r\n\r\n            showId: this.props.match.params.showId,\r\n            layout: this.props.match.params.layout\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:8080/api/profile\", {\r\n        // fetch(\"https://wbdv-team18-final-project.herokuapp.com/api/profile\", {\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => {\r\n                console.log(response)\r\n                return response.json()\r\n            })\r\n            .catch(e => {\r\n                this.props.history.push(\"/\")\r\n            })\r\n            .then(user => {\r\n                if(user) {\r\n                    this.setState({\r\n                        userId: user.id,\r\n                        userRole: user.role\r\n                    })\r\n                }\r\n            }).then(status =>\r\n            // fetch(`http://localhost:8080/api/users/${this.state.userId}/shows`)\r\n            fetch(`https://wbdv-team18-final-project.herokuapp.com/api/users/${this.state.userId}/shows`)\r\n                .then(response => response.json())\r\n                .then(watchlist => this.setState({\r\n                    watchlist: watchlist\r\n                })\r\n            )\r\n        )\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.showId !== this.props.match.params.showId) {\r\n            this.setState({\r\n                showId: this.props.match.params.showId\r\n            })\r\n        }\r\n        if (prevProps.match.params.layout !== this.props.match.params.layout) {\r\n            this.setState({\r\n                layout: this.props.match.params.layout\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Group Page</h1>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ShowListComponent from \"./ShowListComponent\";\r\nimport SummaryCardComponent from \"./SummaryCardComponent\";\r\nimport ProfileTabsComponent from \"./ProfileTabsComponent\";\r\nimport GenreBadgesComponent from \"./GenreBadgesComponent\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport PostListComponent from \"./PostListComponent\";\r\nimport GroupsTabComponent from \"./GroupsTabComponent\";\r\n\r\nexport default class ProfileComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            userId: this.props.match.params.profileId,\r\n\r\n            favoriteGenres: [\"action\", \"comedy\", \"fantasy\", \"sci-fi\", \"anime\"],\r\n            watchlist: [],\r\n            groups: [],\r\n            posts: [],\r\n\r\n            showId: this.props.match.params.showId,\r\n            layout: this.props.match.params.layout\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`http://localhost:8080/api/users/${this.state.userId}`, {\r\n        // fetch(`https://wbdv-team18-final-project.herokuapp.com/api/users/${this.state.userId}`, {\r\n            // fetch(\"http://localhost:8080/api/profile\", {\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(user => {\r\n                if(user) {\r\n                    console.log(\"entered conditional\")\r\n                    this.setState({\r\n                        username: user.username,\r\n                    })\r\n                }\r\n            }).then(status =>\r\n            fetch(`http://localhost:8080/api/users/${this.state.userId}/shows`)\r\n            // fetch(`https://wbdv-team18-final-project.herokuapp.com/api/users/${this.state.userId}/shows`)\r\n                .then(response => response.json())\r\n                .then(watchlist => this.setState({\r\n                    watchlist: watchlist\r\n                })).then(status =>\r\n                fetch(`http://localhost:8080/api/users/${this.state.userId}/groups`)\r\n                // fetch(`https://wbdv-team18-final-project.herokuapp.com/api/users/${this.state.userId}/groups`)\r\n                    .then(response => response.json())\r\n                    .then(groups => this.setState({\r\n                        groups: groups\r\n                    })).then(status => console.log(this.state.groups)\r\n                )\r\n            ))\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.showId !== this.props.match.params.showId) {\r\n            this.setState({\r\n                showId: this.props.match.params.showId\r\n            })\r\n        }\r\n        if (prevProps.match.params.layout !== this.props.match.params.layout) {\r\n            this.setState({\r\n                layout: this.props.match.params.layout\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-lg-2 col-md-2 col-sm-2\">\r\n                        <i className=\"fa fa-user-circle-o mt-2\" style={{fontSize: 80}}/>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-10 col-md-10 col-sm-10\">\r\n                        <div className=\"d-flex {/*justify-content-between*/}\">\r\n                            <h2>{this.state.username}</h2>\r\n                        </div>\r\n                        <p className=\"m-0\">Top 5 Genres</p>\r\n                        <div className=\"row pl-3\">\r\n                            {this.state.favoriteGenres.map(genre => <GenreBadgesComponent genre={genre}/>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 mt-3\">\r\n                        <ProfileTabsComponent layout={this.state.layout}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-7\">\r\n                        <br/>\r\n\r\n                        <MediaQuery query='(min-width: 1024px)'>\r\n                            {/*{console.log(this.state.watchlist)}*/}\r\n                            <div>\r\n                                {this.state.layout === \"watchlist\" &&\r\n                                <ShowListComponent\r\n                                    {...this.props}\r\n                                    mobileView={false}\r\n                                    layout={this.state.layout}\r\n                                    shows={this.state.watchlist}/>\r\n                                }\r\n                            </div>\r\n                        </MediaQuery>\r\n                        <MediaQuery query='(max-width: 1023px)'>\r\n                            <div>\r\n                                {this.state.layout === \"watchlist\" &&\r\n                                <ShowListComponent\r\n                                    {...this.props}\r\n                                    mobileView={true}\r\n                                    layout={this.state.layout}\r\n                                    shows={this.state.watchlist}/>\r\n                                }\r\n                            </div>\r\n                        </MediaQuery>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-5\">\r\n                        {\r\n                            this.state.showId &&\r\n                            <SummaryCardComponent\r\n                                {...this.props}\r\n                                layout={this.state.layout}\r\n                                _id={this.state.showId}\r\n                                key={this.state.showId}/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.layout === \"group\" &&\r\n                    <span>\r\n                    <GroupsTabComponent\r\n                        {...this.props}\r\n                        userId={this.state.userId}\r\n                        groups={this.state.groups}/>\r\n                </span>\r\n                }\r\n                {\r\n                    this.state.layout === \"posts\" &&\r\n                    <span>\r\n                    <PostListComponent/>\r\n                </span>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport SearchComponent from \"./components/SearchComponent\";\r\nimport ResultInfoComponent from './components/ResultInfoComponent';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport ProfileComponent from \"./components/ProfileComponent\";\r\nimport NavBarComponent from \"./components/NavBarComponent\";\r\nimport ProfileSettingsComponent from \"./components/ProfileSettingsComponent\";\r\nimport LoginComponent from \"./components/LoginComponent\";\r\nimport RegisterComponent from \"./components/RegisterComponent\";\r\nimport DiscussionBoardComponent from \"./components/DiscussionBoardComponent\";\r\nimport HomePageComponent from \"./components/HomePageComponent\";\r\nimport GroupComponent from \"./components/GroupComponent\";\r\nimport VisitingProfileComponent from \"./components/VisitingProfileComponent\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className={\"container\"}>\r\n        <NavBarComponent />\r\n        <Route\r\n          path={\"/\"}\r\n          exact={true}\r\n          component={HomePageComponent} />\r\n        <Route\r\n          path={\"/search\"}\r\n          exact={true}\r\n          component={SearchComponent} />\r\n        <Route\r\n          path={\"/search/:query\"}\r\n          exact={true}\r\n          component={SearchComponent} />\r\n        <Route\r\n          path={\"/result/:imdb_id\"}\r\n          exact={true}\r\n          component={ResultInfoComponent} />\r\n        <Route\r\n          path={\"/profile/:layout\"}\r\n          exact={true}\r\n          component={ProfileComponent} />\r\n        <Route\r\n          path={\"/profile/:layout/:showId\"}\r\n          exact={true}\r\n          component={ProfileComponent} />\r\n        <Route\r\n          path={\"/profile/info\"}\r\n          exact={true}\r\n          component={ProfileSettingsComponent} />\r\n        <Route\r\n          path={\"/login\"}\r\n          exact={true}\r\n          component={LoginComponent} />\r\n        <Route\r\n          path={\"/registration\"}\r\n          exact={true}\r\n          component={RegisterComponent} />\r\n        <Route\r\n          path={\"/discussions/:discId\"}\r\n          exact render={({ match }) => <DiscussionBoardComponent match={match} />} />\r\n        <Route\r\n          path={\"/group/:groupId\"}\r\n          exact={true}\r\n          component={GroupComponent} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\r\nimport NavBarComponent from \"./components/NavBarComponent\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}